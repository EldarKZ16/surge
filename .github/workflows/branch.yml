name: branch

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  pull_request:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    env:
      TEMPLATE_TYPE: lib
      IS_PIPELINE: 'true'
      NAMESPACE: gears-arch
      NAMESPACE_AIRLOCK_HOST: https://gears-tools-dev-airlock.apps.mia.ulti.io
      NAMESPACE_AIRLOCK_HASH: ${{ secrets.AIRLOCK_HASH }}
      NAMESPACE_AIRLOCK_NAME: dev
      PIPELINE_NAME: surge-kafka-streams.lib
    # The type of runner that the job will run on
    runs-on: [ self-hosted ]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - uses: actions/checkout@v2
      - name: Set up Scala
        uses: olafurpg/setup-scala@v5
        with:
          java-version: adopt@1.8
      - name: test
        run: 'fnd tanagra:build:test'
      - name: sonar
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: sbt -batch -Dsonar.host.url='https://sonar.ulti.io' -Dsonar.login=$SONAR_TOKEN -Dsonar.projectKey='GEARS_Tools:surge-kafka-streams' -Dsonar.projectName='surge-kafka-streams' sonarScan
        # TODO I think quark foundry needs to be adjusted for sonar support with Github. The scanner auto-detects we're using github actions and does not like that Quark sets -Dsonar.branch.name
        #run: 'fnd tanagra:build:sonar --bitbucket_ssh_key=secrets.dev::bitbucket/service-account:ssh-private-key --sonar_host=https://sonar.ulti.io --sonar_token=secrets.dev::sonar:token --sonar_project_key=GEARS_Tools --small_test_reports_dir=target'
